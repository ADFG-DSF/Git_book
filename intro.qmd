# Introduction

There is a a lot of git stuff out there and most of it is not intended for scientists (One of the best science focused git tutorials for R is [HappygitwithR](https://happygitwithr.com/)). Our goal to amalgamate the most common techniques in scientific analysis into one workflow that is specific for fisheries analysis.

## What does Git do?

Git offers a way to track changes is your analysis without requiring the analyst to create different versions of the same file. To use git an analyst **init**ializes their working directory (hopefully an R project). Files involved in the analysis (data, scripts, functions, model code) are **add**ed to the ask git to track changes associated with each file. When the analyst makes a **commit**, a snapshot of all tracked files at a specific point in time are recorded along with a message describing the commit and a automatically assigned a unique identifier. The analysis can also **tag** important commits. Because you can **checkout** prior commits this system duplicates file versioning with a structured system while ensuring the all commits are documented and the most important commits are easily identifiable.

The collection of all the commits, messages, tags and identifiers associated with a projects is called a **repository**. When a repository is created on your computer or private/company network it is **local**. An analyst can **push** a local repository to a **remote** repository (stored on the cloud). Alternatively, the analyst can **pull** a remote repository to their computer or private/company network to either create or update a local repository. Because multiple local repositories can push and pull to the same remote git allows collaboration between analysts which maintains the documentation and unique identifier features. Github is the most popular hosting service facilitating these collaborative features of git.
